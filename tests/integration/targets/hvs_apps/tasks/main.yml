---
- name: Test HVS apps lookup plugin
  block:
    # Validate input variables
    - name: Validate required input vars
      assert:
        that:
          - hcp_organisation_id is defined
          - hcp_project_id is defined
        fail_msg: "Required variables hcp_organisation_id and hcp_project_id must be set"

    # Test basic functionality
    - name: List all apps
      set_fact:
        all_apps: "{{ lookup('benemon.hcp_community_collection.hvs_apps', 
                     'organization_id=' ~ hcp_organisation_id, 
                     'project_id=' ~ hcp_project_id) }}"

    - name: debug output
      debug:
        var: all_apps

    - name: Verify basic app structure
      assert:
        that:
          - all_apps is defined
          - all_apps is sequence
          - all_apps | length > 0
          - all_apps[0].name is defined
          - all_apps[0].organization_id == hcp_organisation_id
          - all_apps[0].project_id == hcp_project_id
        fail_msg: "Basic app structure validation failed"

    # Test pagination
    - name: Test pagination with single result
      set_fact:
        single_page: "{{ lookup('benemon.hcp_community_collection.hvs_apps', 
                        'organization_id=' ~ hcp_organisation_id, 
                        'project_id=' ~ hcp_project_id,
                        'page_size=1',
                        'max_pages=1') }}"

    - name: Verify pagination
      assert:
        that:
          - single_page | length <= 1
        fail_msg: "Pagination test failed - more results than expected"

    # Test name filtering
    - name: Test name filtering
      set_fact:
        filtered_apps: "{{ lookup('benemon.hcp_community_collection.hvs_apps', 
                         'organization_id=' ~ hcp_organisation_id, 
                         'project_id=' ~ hcp_project_id,
                         'name_contains=sample') }}"

    - name: Verify name filtering
      assert:
        that:
          - filtered_apps | map(attribute='name') | select('search', 'sample') | list | length == filtered_apps | length
        fail_msg: "Not all app names contain 'sample' as expected"
        success_msg: "All app names contain 'sample' as expected"

    # Test data structure completeness
    - name: Verify complete app data structure
      assert:
        that:
          # Required fields
          - item.name is defined
          - item.organization_id is defined
          - item.project_id is defined
          - item.resource_id is defined
          - item.resource_name is defined
          - item.created_at is defined
          - item.created_by is defined
          # Created by structure
          - item.created_by.name is defined
          - item.created_by.email is defined
          - item.created_by.type is defined
          # Optional fields can be null but should exist
          - item.description is defined
          - item.updated_at is defined
          - item.updated_by is defined
          - item.sync_names is defined
          - item.secret_count is defined
        fail_msg: "App data structure incomplete for app: {{ item.name }}"
      loop: "{{ all_apps }}"

    # Test disabled pagination
    - name: Test with disabled pagination
      set_fact:
        no_pagination: "{{ lookup('benemon.hcp_community_collection.hvs_apps', 
                         'organization_id=' ~ hcp_organisation_id, 
                         'project_id=' ~ hcp_project_id,
                         'disable_pagination=true') }}"

    - name: Verify disabled pagination result
      assert:
        that:
          - no_pagination is sequence
        fail_msg: "Disabled pagination test failed"

    # Print final results for debugging
    - name: Show test results
      debug:
        msg: |
          Total apps found: {{ all_apps | length }}
          Apps with pagination: {{ single_page | length }}
          Filtered apps found: {{ filtered_apps | length }}
          Apps without pagination: {{ no_pagination | length }}

  rescue:
    - name: Handle test failures
      fail:
        msg: "Integration test failed: {{ ansible_failed_result | default('Unknown error') }}"